---
title: "Hands-on_Ex04_P3"
author: "Lin Xinyue"
---

1.  Preparing Data

1.2 Installing and loading the packages

Load the R packages into RStudion environment

```{r}
pacman::p_load(plotly, crosstalk, DT, 
               ggdist, ggridges, colorspace,
               gganimate, tidyverse)
```

1.3 Importing Data

```{r}
exam <- read_csv("Exam_data.csv")
```

2.  Visualizing the uncertainty of point estimates: ggplot2 methods

Following are how to plot error bars of maths scores by race by using data provided in exam tibble data frame.

Step 1. Derive the necessary summary statistics

-   group_by() of dplyr package is used to group the observation by RACE

-   summarise() is used to compute the count of observations, mean, standard deviation

-   mutate() is used to derive standard error of Maths by RACE, and the output is save as a tibble data table called my_sum.

```{r}
my_sum <- exam %>%
  group_by(RACE) %>%
  summarise(
    n=n(),
    mean=mean(MATHS),
    sd=sd(MATHS)
    ) %>%
  mutate(se=sd/sqrt(n-1))
```

Step 2: The code chunk below will be used to display my_sum tibble data frame in an html table format

```{r}
knitr::kable(head(my_sum), format = 'html')
```

3.  Plotting standard error bars of point estimates

```{r}
ggplot(my_sum) +
  geom_errorbar(
    aes(x=RACE, 
        ymin=mean-se, 
        ymax=mean+se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    linewidth=0.5) +
  geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  ggtitle("Standard error of mean maths score by rac")
```

::: info-box
<h4>Note</h4>

<ul>

<li>The error bars are computed by using the formula mean+/-se.</li>

<li>For geom_point(), it is important to indicate stat=“identity”.</li>

</ul>
:::

4.  Plotting confidence interval of point estimates

```{r}
ggplot(my_sum) +
  geom_errorbar(
    aes(x=reorder(RACE, -mean), 
        ymin=mean-1.96*se, 
        ymax=mean+1.96*se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    linewidth=0.5) +
  geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  labs(x = "Maths score",
       title = "95% confidence interval of mean maths score by race")
```

::: info-box
<h4>Note</h4>

<ul>

<li>The confidence intervals are computed by using the formula mean+/-1.96\*se.</li>

<li>The error bars is sorted by using the average maths scores.</li>

<li>labs() argument of ggplot2 is used to change the x-axis label.</li>

</ul>
:::

5.  Visualizing the uncertainty of point estimates with interactive error bars

How to plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below?

```{r}
shared_df = SharedData$new(my_sum)

bscols(widths = c(4,8),
       ggplotly((ggplot(shared_df) +
                   geom_errorbar(aes(
                     x=reorder(RACE, -mean),
                     ymin=mean-2.58*se, 
                     ymax=mean+2.58*se), 
                     width=0.2, 
                     colour="black", 
                     alpha=0.9, 
                     size=0.5) +
                   geom_point(aes(
                     x=RACE, 
                     y=mean, 
                     text = paste("Race:", `RACE`, 
                                  "<br>N:", `n`,
                                  "<br>Avg. Scores:", round(mean, digits = 2),
                                  "<br>95% CI:[", 
                                  round((mean-2.58*se), digits = 2), ",",
                                  round((mean+2.58*se), digits = 2),"]")),
                     stat="identity", 
                     color="red", 
                     size = 1.5, 
                     alpha=1) + 
                   xlab("Race") + 
                   ylab("Average Scores") + 
                   theme_minimal() + 
                   theme(axis.text.x = element_text(
                     angle = 45, vjust = 0.5, hjust=1)) +
                   ggtitle("99% Confidence interval of average /<br>maths scores by race")), 
                tooltip = "text"), 
       DT::datatable(shared_df, 
                     rownames = FALSE, 
                     class="compact", 
                     width="100%", 
                     options = list(pageLength = 10,
                                    scrollX=T), 
                     colnames = c("No. of pupils", 
                                  "Avg Scores",
                                  "Std Dev",
                                  "Std Error")) %>%
         formatRound(columns=c('mean', 'sd', 'se'),
                     digits=2))
```

6.  Visualising Uncertainty: ggdist package

-   It provides a flexible set of ggplot2 geoms and stats designed especially for visualising distributions and uncertainty.

-   For frequentist models, one visualises confidence distributions or bootstrap distributions (see vignette(“freq-uncertainty-vis”));

-   For Bayesian models, one visualises probability distributions (see the tidybayes package, which builds on top of ggdist).

6.1 Visualizing the uncertainty of point estimates: ggdist methods
 stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.
```{r}
exam %>%
  ggplot(aes(x = RACE, 
             y = MATHS)) +
  stat_pointinterval() +
  labs(
    title = "Visualising confidence intervals of mean math score",
    subtitle = "Mean Point + Multiple-interval plot")
```

For example, in the code chunk below the following arguments are used:

.width = 0.95
.point = median
.interval = qi
```{r}
exam %>%
  ggplot(aes(x = RACE, y = MATHS)) +
  stat_pointinterval(.width = 0.95,
  .point = median,
  .interval = qi) +
  labs(
    title = "Visualising confidence intervals of median math score",
    subtitle = "Median Point + Multiple-interval plot")
```

6.2 Visualizing the uncertainty of point estimates: ggdist methods
 Makeover the plot on previous slide by showing 95% and 99% confidence intervals.

```{r}
exam %>%
  ggplot(aes(x = RACE, 
             y = MATHS)) +
  stat_pointinterval(
    .width = c(0.95, 0.99),   
    show.legend = TRUE) +
  labs(
    title = "Visualising confidence intervals of mean math score",
    subtitle = "Mean Point + 95% and 99% Multiple-interval plot") 
```
 
6.4 Visualizing the uncertainty of point estimates: ggdist methods
 stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.
```{r}
exam %>%
  ggplot(aes(x = RACE, 
             y = MATHS)) +
  stat_gradientinterval(   
    fill = "skyblue",      
    show.legend = TRUE     
  ) +                        
  labs(
    title = "Visualising confidence intervals of mean math score",
    subtitle = "Gradient + interval plot")
```

7. Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)
7.1 Installing ungeviz package
```{r}
devtools::install_github("wilkelab/ungeviz")
```
7.2 Launch the application in R
```{r}
library(ungeviz)
```

7.3 Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)
```{r}
ggplot(data = exam, 
       (aes(x = factor(RACE), 
            y = MATHS))) +
  geom_point(position = position_jitter(
    height = 0.3, 
    width = 0.05), 
    size = 0.4, 
    color = "#0072B2", 
    alpha = 1/2) +
  geom_hpline(data = sampler(25, 
                             group = RACE), 
              height = 0.6, 
              color = "#D55E00") +
  theme_bw() + 
  transition_states(.draw, 1, 3)
```

 
 
