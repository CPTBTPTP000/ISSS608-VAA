---
title: "Hands-on_Ex04_P2"
author: "Lin Xinyue"
---

1.  Preparing Data

1.2 Installing and loading the packages
```{r}
pacman::p_load(ggstatsplot, tidyverse)
```
1.3 Importing Data

```{r}
exam <- read_csv("Exam_data.csv")
```

2. One-sample test: gghistostats() method
 gghistostats(): To build an visual of one-sample test on English scores.

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = ENGLISH,
  type = "bayes",
  test.value = 60,
  xlab = "English scores"
)
```
3 Unpacking the Bayes Factor
 A Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.
 
4.Two-sample mean test: ggbetweenstats()
 ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.

```{r}
ggbetweenstats(
  data = exam,
  x = GENDER, 
  y = MATHS,
  type = "np",
  messages = FALSE
)
```

4. Oneway ANOVA Test: ggbetweenstats() method
 ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race.

```{r}
ggbetweenstats(
  data = exam,
  x = RACE, 
  y = ENGLISH,
  type = "p",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
```

5.Significant Test of Correlation: ggscatterstats()
 ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.
 
```{r}
ggscatterstats(
  data = exam,
  x = MATHS,
  y = ENGLISH,
  marginal = FALSE,
  )
```

6. Significant Test of Association (Depedence) : ggbarstats() methods
 The Maths scores is binned into a 4-class variable by using cut().
```{r}
exam1 <- exam %>% 
  mutate(MATHS_bins = 
           cut(MATHS, 
               breaks = c(0,60,75,85,100))
)
```

 ggbarstats() is used to build a visual for Significant Test of Association
```{r}
ggbarstats(exam1, 
           x = MATHS_bins, 
           y = GENDER)
```

7. Visualising Models
7.1  Preparing Data
```{r}
pacman::p_load(readxl, performance, parameters, see)
```
```{r}
car_resale <- readxl::read_xls("D:/Users/CPTBTPTP000/ISSS608-VAA/Hands-on_Ex/ToyotaCorolla.xls", sheet = "data")
car_resale
```

7.2 Multiple Regression Model using lm()
Calibrate a multiple linear regression model by using lm() of Base Stats of R.
```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
model
```
7.3 Checking for multicolinearity:check_collinearity()

```{r}
check_collinearity(model)
```
```{r}
check_c <- check_collinearity(model)
plot(check_c)
```
7.4 Model Diagnostic: checking normality assumption:check_normality() 
```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period, data = car_resale)

check_n <- check_normality(model1)

plot(check_n)
```
7.5 Check model for homogeneity of variances: check_heteroscedasticity()
```{r}
check_h <- check_heteroscedasticity(model1)

plot(check_h)

```
7.6 Complete check:check_model()
```{r}
check_model(model1)
```
7.7 Visualising Regression Parameters: see methods
```{r}
plot(parameters(model1))
```
7.8 Visualising Regression Parameters: ggcoefstats() methods
```{r}
ggcoefstats(model1, 
            output = "plot")
```




